/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package frontend;

import backend.Term;
import backend.TermDataManagement;
import book.bookpicker.Book;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.geom.RoundRectangle2D;
import java.awt.image.BufferedImage;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.text.Document;
import javax.swing.text.JTextComponent;

/**
 *
 * @author BRIN
 */
public class SourceFrame extends javax.swing.JFrame {

    /**
     * Creates new form SourceFrame
     */
    
    private final Book initialisedBook;
    private boolean termFound = false;
    
    private final TermDataManagement tdm;
    private final String DEFAULT_SPELLING = "_PLACE_HOLDER_";
    private Term currentTerm = new Term(DEFAULT_SPELLING);
    
    
    private final String DEFAULT_STATUS_TEXT = "";
    private final String TERM_FOUND_STATUS_TEXT = "Term found! Press enter now to edit this term.";
    private final String TERM_NOT_FOUND_STATUS_TEXT = "Specified term was not found! Press enter now to create a new term";
    
    private final String DEFAULT_DEFINITION = "-";
    private final String DEFAULT_REFERENCE = " -"; // space for stylistic choice
    
    private void checkTerm(){
        
        String currentSpelling = spellingTextBox.getText().trim();
        
        termFound= tdm.contains(currentSpelling);
        
        
        
        if(termFound){
            
            currentTerm = tdm.getTerm(currentSpelling);
            statusLabel.setText(TERM_FOUND_STATUS_TEXT);
            definitionTextArea.setText(currentTerm.getDefinition());
            pageTextBox.setText(Integer.toString(currentTerm.getPage()));
            chapterTextBox.setText(currentTerm.getChapter());
            majorTopicTextBox.setText(currentTerm.getMajorTopic());
            subtopicTextArea.setText(currentTerm.getSubtopic());
            
        }
        else{
            
            currentTerm = new Term(DEFAULT_SPELLING);
            if(!currentSpelling.isBlank()){
                statusLabel.setText(TERM_NOT_FOUND_STATUS_TEXT);
            }
            else{
                statusLabel.setText(DEFAULT_STATUS_TEXT);
            }
            definitionTextArea.setText(DEFAULT_REFERENCE);
            pageTextBox.setText(DEFAULT_REFERENCE);
            chapterTextBox.setText(DEFAULT_REFERENCE);
            majorTopicTextBox.setText(DEFAULT_REFERENCE);
            subtopicTextArea.setText(DEFAULT_REFERENCE);
        }
        
        
        
    }
    
    private void initialiseSpellingTextBoxBehaviour(){
        
        
        
        Document doc = spellingTextBox.getDocument();
        
        doc.addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                // This method is called when text is inserted
                checkTerm();
                    
                
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                // This method is called when text is removed
                
                checkTerm();
                
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                // This method is called when attributes change (less common for JTextField)
                
                checkTerm();
            }

            
        });
    }
    
    public SourceFrame(Book book) {
        this.initialisedBook = book;
        this.tdm = book.getTDM();
        initComponents();
        initialiseSpellingTextBoxBehaviour();
        //roundedPanel.setDefaultColor(Color.white);
        
        bookLabel.setText(book.getTitle());
        bookLabel.setForeground(book.getColorScheme()[1]);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jTextArea2 = new javax.swing.JTextArea();
        parentPanel = new javax.swing.JPanel();
        spellingTextBox = new javax.swing.JTextField();
        titleLabel = new javax.swing.JLabel();
        definitionTextArea = new javax.swing.JTextArea();
        referenceContainerPanel = new javax.swing.JPanel();
        subtopicTextArea = new javax.swing.JTextArea();
        chapterTextBox = new javax.swing.JLabel();
        chapterLabel = new javax.swing.JLabel();
        majorTopicLabel = new javax.swing.JLabel();
        majorTopicTextBox = new javax.swing.JLabel();
        subtopicLabel = new javax.swing.JLabel();
        pageLabel = new javax.swing.JLabel();
        pageTextBox = new javax.swing.JLabel();
        decorativeDefinitionPanel = new frontend.RoundedPanel();
        otherInfoContainerPanel = new javax.swing.JPanel();
        roundedPanel4 = new frontend.RoundedPanel();
        jLabel1 = new javax.swing.JLabel();
        decorativeReferencePanel = new frontend.RoundedPanel();
        decorativeOtherInfoPanel = new frontend.RoundedPanel();
        otherInfoHeaderLabel = new javax.swing.JLabel();
        definitionHeaderLabel = new javax.swing.JLabel();
        bookLabel = new javax.swing.JLabel();
        statusLabel = new javax.swing.JLabel();
        referenceHeaderLabel = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 64, Short.MAX_VALUE)
        );

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        jTextArea2.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea2.setLineWrap(true);
        jTextArea2.setRows(5);
        jTextArea2.setWrapStyleWord(true);
        jTextArea2.setCaretColor(new java.awt.Color(255, 255, 255));
        jTextArea2.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        jTextArea2.setOpaque(false);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Medical Glossary v1.0");
        setBackground(new java.awt.Color(34, 40, 44));
        setResizable(false);
        setSize(new java.awt.Dimension(1200, 700));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        parentPanel.setBackground(new java.awt.Color(44, 62, 80));
        parentPanel.setMaximumSize(new java.awt.Dimension(1200, 700));
        parentPanel.setMinimumSize(new java.awt.Dimension(1200, 700));
        parentPanel.setPreferredSize(new java.awt.Dimension(1200, 700));
        parentPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        spellingTextBox.setBackground(new java.awt.Color(68, 96, 122));
        spellingTextBox.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        spellingTextBox.setForeground(new java.awt.Color(255, 255, 255));
        spellingTextBox.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        spellingTextBox.setText("<Enter Term>");
        spellingTextBox.setCaretColor(new java.awt.Color(255, 255, 255));
        spellingTextBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spellingTextBoxActionPerformed(evt);
            }
        });
        parentPanel.add(spellingTextBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 130, 680, 40));

        titleLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 24)); // NOI18N
        titleLabel.setForeground(new java.awt.Color(255, 255, 255));
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Medical Glossary v1.0");
        parentPanel.add(titleLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 60, 280, -1));

        definitionTextArea.setEditable(false);
        definitionTextArea.setBackground(new java.awt.Color(57, 75, 92));
        definitionTextArea.setColumns(20);
        definitionTextArea.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        definitionTextArea.setForeground(new java.awt.Color(255, 255, 255));
        definitionTextArea.setLineWrap(true);
        definitionTextArea.setRows(5);
        definitionTextArea.setText("---");
        definitionTextArea.setWrapStyleWord(true);
        definitionTextArea.setBorder(null);
        definitionTextArea.setCaretColor(new java.awt.Color(255, 255, 255));
        definitionTextArea.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        parentPanel.add(definitionTextArea, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 280, 510, 390));

        referenceContainerPanel.setOpaque(false);
        referenceContainerPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        subtopicTextArea.setEditable(false);
        subtopicTextArea.setBackground(new java.awt.Color(57, 75, 92));
        subtopicTextArea.setColumns(20);
        subtopicTextArea.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        subtopicTextArea.setForeground(new java.awt.Color(255, 255, 255));
        subtopicTextArea.setLineWrap(true);
        subtopicTextArea.setRows(5);
        subtopicTextArea.setText(" -");
        subtopicTextArea.setWrapStyleWord(true);
        subtopicTextArea.setBorder(null);
        subtopicTextArea.setCaretColor(new java.awt.Color(255, 255, 255));
        subtopicTextArea.setFocusable(false);
        referenceContainerPanel.add(subtopicTextArea, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 560, 50));

        chapterTextBox.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        chapterTextBox.setForeground(new java.awt.Color(255, 255, 255));
        chapterTextBox.setText(" -");
        referenceContainerPanel.add(chapterTextBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 560, -1));

        chapterLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        chapterLabel.setForeground(new java.awt.Color(204, 204, 204));
        chapterLabel.setText(" Chapter:");
        referenceContainerPanel.add(chapterLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 70, -1));

        majorTopicLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        majorTopicLabel.setForeground(new java.awt.Color(204, 204, 204));
        majorTopicLabel.setText(" Major Topic:");
        referenceContainerPanel.add(majorTopicLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 90, -1));

        majorTopicTextBox.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        majorTopicTextBox.setForeground(new java.awt.Color(255, 255, 255));
        majorTopicTextBox.setText(" -");
        referenceContainerPanel.add(majorTopicTextBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 560, -1));

        subtopicLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        subtopicLabel.setForeground(new java.awt.Color(204, 204, 204));
        subtopicLabel.setText(" Subtopic:");
        referenceContainerPanel.add(subtopicLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 70, -1));

        pageLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        pageLabel.setForeground(new java.awt.Color(204, 204, 204));
        pageLabel.setText(" Page:");
        referenceContainerPanel.add(pageLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 70, -1));

        pageTextBox.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        pageTextBox.setForeground(new java.awt.Color(255, 255, 255));
        pageTextBox.setText(" -");
        referenceContainerPanel.add(pageTextBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 220, -1));

        parentPanel.add(referenceContainerPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 270, 590, 240));

        decorativeDefinitionPanel.setDefaultColor(new java.awt.Color(57, 75, 92));

        javax.swing.GroupLayout decorativeDefinitionPanelLayout = new javax.swing.GroupLayout(decorativeDefinitionPanel);
        decorativeDefinitionPanel.setLayout(decorativeDefinitionPanelLayout);
        decorativeDefinitionPanelLayout.setHorizontalGroup(
            decorativeDefinitionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 530, Short.MAX_VALUE)
        );
        decorativeDefinitionPanelLayout.setVerticalGroup(
            decorativeDefinitionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 410, Short.MAX_VALUE)
        );

        parentPanel.add(decorativeDefinitionPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, 530, 410));

        otherInfoContainerPanel.setOpaque(false);
        otherInfoContainerPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        roundedPanel4.setDefaultColor(new java.awt.Color(45, 60, 74));

        javax.swing.GroupLayout roundedPanel4Layout = new javax.swing.GroupLayout(roundedPanel4);
        roundedPanel4.setLayout(roundedPanel4Layout);
        roundedPanel4Layout.setHorizontalGroup(
            roundedPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );
        roundedPanel4Layout.setVerticalGroup(
            roundedPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );

        otherInfoContainerPanel.add(roundedPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 60, 60));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Hyperlinks");
        jLabel1.setToolTipText("");
        otherInfoContainerPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 80, -1));

        parentPanel.add(otherInfoContainerPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 550, 590, 130));

        decorativeReferencePanel.setDefaultColor(new java.awt.Color(57, 75, 92));

        javax.swing.GroupLayout decorativeReferencePanelLayout = new javax.swing.GroupLayout(decorativeReferencePanel);
        decorativeReferencePanel.setLayout(decorativeReferencePanelLayout);
        decorativeReferencePanelLayout.setHorizontalGroup(
            decorativeReferencePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 590, Short.MAX_VALUE)
        );
        decorativeReferencePanelLayout.setVerticalGroup(
            decorativeReferencePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 240, Short.MAX_VALUE)
        );

        parentPanel.add(decorativeReferencePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 270, 590, 240));

        decorativeOtherInfoPanel.setDefaultColor(new java.awt.Color(57, 75, 92));
        decorativeOtherInfoPanel.setHoverColor(new java.awt.Color(57, 75, 92));

        javax.swing.GroupLayout decorativeOtherInfoPanelLayout = new javax.swing.GroupLayout(decorativeOtherInfoPanel);
        decorativeOtherInfoPanel.setLayout(decorativeOtherInfoPanelLayout);
        decorativeOtherInfoPanelLayout.setHorizontalGroup(
            decorativeOtherInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 590, Short.MAX_VALUE)
        );
        decorativeOtherInfoPanelLayout.setVerticalGroup(
            decorativeOtherInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 130, Short.MAX_VALUE)
        );

        parentPanel.add(decorativeOtherInfoPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 550, 590, 130));

        otherInfoHeaderLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 14)); // NOI18N
        otherInfoHeaderLabel.setForeground(new java.awt.Color(255, 255, 255));
        otherInfoHeaderLabel.setText("Other Info:");
        parentPanel.add(otherInfoHeaderLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 520, 120, -1));

        definitionHeaderLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 14)); // NOI18N
        definitionHeaderLabel.setForeground(new java.awt.Color(255, 255, 255));
        definitionHeaderLabel.setText("Definition:");
        parentPanel.add(definitionHeaderLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 240, 120, -1));

        bookLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 16)); // NOI18N
        bookLabel.setForeground(new java.awt.Color(233, 179, 15));
        bookLabel.setText("<Book Name>");
        parentPanel.add(bookLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 240, 480, 20));

        statusLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 12)); // NOI18N
        statusLabel.setForeground(new java.awt.Color(255, 255, 255));
        statusLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        statusLabel.setText("Specified term was not found. Press Enter to Create New.");
        parentPanel.add(statusLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 175, 680, 20));

        referenceHeaderLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 14)); // NOI18N
        referenceHeaderLabel.setForeground(new java.awt.Color(255, 255, 255));
        referenceHeaderLabel.setText("Reference:");
        parentPanel.add(referenceHeaderLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 240, 90, -1));

        getContentPane().add(parentPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 700));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void spellingTextBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spellingTextBoxActionPerformed
        // TODO add your handling code here:
        JTextComponent[] textComponents = {
          spellingTextBox, definitionTextArea  
        };
        
        new definitionEditFrame(initialisedBook, tdm, currentTerm, termFound, textComponents).setVisible(true);
    }//GEN-LAST:event_spellingTextBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SourceFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SourceFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SourceFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SourceFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        Book book = Book.GRAYS_ANATOMY;
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SourceFrame(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bookLabel;
    private javax.swing.JLabel chapterLabel;
    private javax.swing.JLabel chapterTextBox;
    private frontend.RoundedPanel decorativeDefinitionPanel;
    private frontend.RoundedPanel decorativeOtherInfoPanel;
    private frontend.RoundedPanel decorativeReferencePanel;
    private javax.swing.JLabel definitionHeaderLabel;
    private javax.swing.JTextArea definitionTextArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JLabel majorTopicLabel;
    private javax.swing.JLabel majorTopicTextBox;
    private javax.swing.JPanel otherInfoContainerPanel;
    private javax.swing.JLabel otherInfoHeaderLabel;
    private javax.swing.JLabel pageLabel;
    private javax.swing.JLabel pageTextBox;
    private javax.swing.JPanel parentPanel;
    private javax.swing.JPanel referenceContainerPanel;
    private javax.swing.JLabel referenceHeaderLabel;
    private frontend.RoundedPanel roundedPanel4;
    private javax.swing.JTextField spellingTextBox;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JLabel subtopicLabel;
    private javax.swing.JTextArea subtopicTextArea;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
