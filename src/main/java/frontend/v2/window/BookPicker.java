/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package frontend.v2.window;

import backend.AppConstants;
import backend.eventadapter.GranularMouseAdapter;
import backend.v2.data.TermDataIOException;
import book.bookpicker.Book;
import book.bookpicker.BookConstructor;
import frontend.RoundedPanel;
import frontend.SVGIconPanel;
import java.awt.Color;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.swing.JLabel;

/**
 *
 * @author BRIN
 */
public class BookPicker extends javax.swing.JDialog {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(BookPicker.class.getName());

    /**
     * Creates new form BookPicker
     */
    
    private Book activatedBook; 
    
    public BookPicker(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        selections = new ArrayList<>(Arrays.asList(selection1, selection2, selection3, selection4, selection5, selection6));
        
        selectionTexts = new ArrayList<>(Arrays.asList(selectionText1, selectionText2, selectionText3, selectionText4, selectionText5, selectionText6));
        
        initializeSelection(currentYear);
        setOrdinal(currentYear);
        initializeNavigation();
    }

    public static Book showBookPicker(){
        BookPicker bp = new BookPicker(null, true);
        bp.setVisible(true);
        return bp.activatedBook;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        header = new javax.swing.JLabel();
        ordinalNumberLabel = new javax.swing.JLabel();
        ordinalIndicatorLabel = new javax.swing.JLabel();
        yearLabel = new javax.swing.JLabel();
        rightArrow = new frontend.SVGIconPanel();
        leftArrow = new frontend.SVGIconPanel();
        selection1 = new frontend.RoundedPanel();
        selectionText1 = new javax.swing.JLabel();
        selection2 = new frontend.RoundedPanel();
        selectionText2 = new javax.swing.JLabel();
        selection3 = new frontend.RoundedPanel();
        selectionText3 = new javax.swing.JLabel();
        selection4 = new frontend.RoundedPanel();
        selectionText4 = new javax.swing.JLabel();
        selection5 = new frontend.RoundedPanel();
        selectionText5 = new javax.swing.JLabel();
        selection6 = new frontend.RoundedPanel();
        selectionText6 = new javax.swing.JLabel();

        jButton3.setText("G&H");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton1.setText("Gray");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Harper");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pick a book");
        setMinimumSize(new java.awt.Dimension(800, 550));
        setResizable(false);
        setSize(new java.awt.Dimension(800, 550));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(39, 52, 65));
        jPanel1.setPreferredSize(new java.awt.Dimension(670, 400));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        header.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 26)); // NOI18N
        header.setForeground(new java.awt.Color(255, 255, 255));
        header.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        header.setText("Pick a book");
        jPanel1.add(header, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 30, 550, 50));

        ordinalNumberLabel.setFont(new java.awt.Font("Segoe UI", 1, 60)); // NOI18N
        ordinalNumberLabel.setForeground(new java.awt.Color(255, 255, 255));
        ordinalNumberLabel.setText("1");
        ordinalNumberLabel.setToolTipText("");
        jPanel1.add(ordinalNumberLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 110, -1, -1));

        ordinalIndicatorLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        ordinalIndicatorLabel.setForeground(new java.awt.Color(255, 255, 255));
        ordinalIndicatorLabel.setText("st");
        jPanel1.add(ordinalIndicatorLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(383, 120, 50, -1));

        yearLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        yearLabel.setForeground(new java.awt.Color(255, 255, 255));
        yearLabel.setText("YEAR");
        jPanel1.add(yearLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(385, 149, -1, 30));

        try {
            rightArrow.set_SVG_URL_String("/icons/bookpick/right-arrow.svg");
        } catch (java.io.IOException e1) {
            e1.printStackTrace();
        }
        rightArrow.setbgSquarePadding(2.0);
        rightArrow.setIconPosition(frontend.SVGIconPanel.iconPosition.CENTER);
        jPanel1.add(rightArrow, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 265, 60, 110));

        try {
            leftArrow.set_SVG_URL_String("/icons/bookpick/left-arrow.svg");
        } catch (java.io.IOException e1) {
            e1.printStackTrace();
        }
        leftArrow.setbgSquarePadding(2.0);
        leftArrow.setIconPosition(frontend.SVGIconPanel.iconPosition.CENTER);
        jPanel1.add(leftArrow, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 265, 60, 110));

        selection1.setSquarePadding(1.0);
        selection1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        selectionText1.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 18)); // NOI18N
        selectionText1.setForeground(new java.awt.Color(255, 255, 255));
        selectionText1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        selectionText1.setText("-");
        selection1.add(selectionText1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 130, 80));

        jPanel1.add(selection1, new org.netbeans.lib.awtextra.AbsoluteConstraints(165, 230, 130, 80));

        selection2.setSquarePadding(1.0);
        selection2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        selectionText2.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 18)); // NOI18N
        selectionText2.setForeground(new java.awt.Color(255, 255, 255));
        selectionText2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        selectionText2.setText("-");
        selection2.add(selectionText2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 130, 80));

        jPanel1.add(selection2, new org.netbeans.lib.awtextra.AbsoluteConstraints(335, 230, 130, 80));

        selection3.setSquarePadding(1.0);
        selection3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        selectionText3.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 18)); // NOI18N
        selectionText3.setForeground(new java.awt.Color(255, 255, 255));
        selectionText3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        selectionText3.setText("-");
        selection3.add(selectionText3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 130, 80));

        jPanel1.add(selection3, new org.netbeans.lib.awtextra.AbsoluteConstraints(505, 230, 130, 80));

        selection4.setSquarePadding(1.0);
        selection4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        selectionText4.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 18)); // NOI18N
        selectionText4.setForeground(new java.awt.Color(255, 255, 255));
        selectionText4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        selectionText4.setText("-");
        selection4.add(selectionText4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 130, 80));

        jPanel1.add(selection4, new org.netbeans.lib.awtextra.AbsoluteConstraints(165, 330, 130, 80));

        selection5.setSquarePadding(1.0);
        selection5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        selectionText5.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 18)); // NOI18N
        selectionText5.setForeground(new java.awt.Color(255, 255, 255));
        selectionText5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        selectionText5.setText("-");
        selection5.add(selectionText5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 130, 80));

        jPanel1.add(selection5, new org.netbeans.lib.awtextra.AbsoluteConstraints(335, 330, 130, 80));

        selection6.setSquarePadding(1.0);
        selection6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        selectionText6.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 18)); // NOI18N
        selectionText6.setForeground(new java.awt.Color(255, 255, 255));
        selectionText6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        selectionText6.setText("-");
        selection6.add(selectionText6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 130, 80));

        jPanel1.add(selection6, new org.netbeans.lib.awtextra.AbsoluteConstraints(505, 330, 130, 80));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 550));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        activatedBook = Book.GRAYS_ANATOMY;
        try {
            activatedBook.getATDM().load();
        } catch (TermDataIOException ex) {
            System.getLogger(BookPicker.class.getName()).log(System.Logger.Level.ERROR, (String) null, ex);
        }
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        activatedBook = Book.HARPERS_ILLUSTRATED_BIOCHEMISTRY;
        try {
            activatedBook.getATDM().load();
        } catch (TermDataIOException ex) {
            System.getLogger(BookPicker.class.getName()).log(System.Logger.Level.ERROR, (String) null, ex);
        }
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        activatedBook = Book.GUYTON_AND_HALL_TEXTBOOK_OF_MEDICAL_PHYSIOLOGY;
        try {
            activatedBook.getATDM().load();
        } catch (TermDataIOException ex) {
            System.getLogger(BookPicker.class.getName()).log(System.Logger.Level.ERROR, (String) null, ex);
        }
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                BookPicker dialog = new BookPicker(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel header;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JPanel jPanel1;
    private frontend.SVGIconPanel leftArrow;
    private javax.swing.JLabel ordinalIndicatorLabel;
    private javax.swing.JLabel ordinalNumberLabel;
    private frontend.SVGIconPanel rightArrow;
    private frontend.RoundedPanel selection1;
    private frontend.RoundedPanel selection2;
    private frontend.RoundedPanel selection3;
    private frontend.RoundedPanel selection4;
    private frontend.RoundedPanel selection5;
    private frontend.RoundedPanel selection6;
    private javax.swing.JLabel selectionText1;
    private javax.swing.JLabel selectionText2;
    private javax.swing.JLabel selectionText3;
    private javax.swing.JLabel selectionText4;
    private javax.swing.JLabel selectionText5;
    private javax.swing.JLabel selectionText6;
    private javax.swing.JLabel yearLabel;
    // End of variables declaration//GEN-END:variables

    private int currentYear = 1;
    private List<RoundedPanel> selections;
    private List<JLabel> selectionTexts;
    private List<Book> currentBookList;
    
    private static Color disabledColor = new Color(57,75,92);
    private static Color defaultColor = AppConstants.DEFAULT_NEXT_BUTTON_CS_1.getDefaultColor();
    
    private GranularMouseAdapter selectionGran = new GranularMouseAdapter(){
        
        @Override
        public void actOnMouseEntry(MouseEvent e){
            RoundedPanel rdPanel = (RoundedPanel) e.getSource();
            rdPanel.setCurrentColor(currentBookList.get(selections.indexOf(rdPanel)).getColorScheme().getHoverColor());
            rdPanel.repaint();
        }
        
        @Override
        public void actOnMouseExit(MouseEvent e){
            RoundedPanel rdPanel = (RoundedPanel) e.getSource();
            rdPanel.setCurrentColor(defaultColor);
            rdPanel.repaint();
        }
        
        @Override
        public void actOnMousePress(MouseEvent e){
            RoundedPanel rdPanel = (RoundedPanel) e.getSource();
            rdPanel.setCurrentColor(currentBookList.get(selections.indexOf(rdPanel)).getColorScheme().getPressedColor());
            rdPanel.repaint();
        }
        
        @Override
        public void actOnMouseRelease(MouseEvent e){
            RoundedPanel rdPanel = (RoundedPanel) e.getSource();
            rdPanel.setCurrentColor(currentBookList.get(selections.indexOf(rdPanel)).getColorScheme().getHoverColor());
            rdPanel.repaint();
            activatedBook = currentBookList.get(selections.indexOf(rdPanel));
            try {
                activatedBook.getATDM().load();
            } catch (TermDataIOException ex) {
                System.getLogger(BookPicker.class.getName()).log(System.Logger.Level.ERROR, (String) null, ex);
            }
            dispose();
        }
        
    };
    
    private void initializeSelection(int year){
        int index = 0;
        for(RoundedPanel rdPanel : selections){
            rdPanel.removeMouseListener(selectionGran);
            rdPanel.setCurrentColor(disabledColor);
            selectionTexts.get(index).setText("-");
            index++;
        }
        
        currentBookList = BookConstructor.getBooksByYear(year);
        int size  = currentBookList.size();
        
        for(int i = 0; i < size; i++){
            selections.get(i).addMouseListener(selectionGran);
            selections.get(i).setCurrentColor(defaultColor);
            selectionTexts.get(i).setText(currentBookList.get(i).getShortHandTitle());
        }
    }
    
    private static Color navWhite = new Color(255,255,255);
    private static Color navBlue = AppConstants.DEFAULT_NEXT_BUTTON_CS_1.getDefaultColor(); // not "navy blue" (although the color is close to it)
    
    private void initializeNavigation(){
        
        GranularMouseAdapter navigationGran = new GranularMouseAdapter(){
            
            
            double prevBGSqrPad = 2.0;
            double prevIconSqrPad = 0.0;
            
            @Override
            public void actOnMouseEntry(MouseEvent e){
                SVGIconPanel icon = (SVGIconPanel) e.getSource();
                icon.overrideFill("arrow", navBlue);
                prevBGSqrPad = icon.getbgSquarePadding();
                prevIconSqrPad = icon.getIconSquarePadding();
                icon.setbgSquarePadding(0.0);
                icon.setBackgroundPainted(true);
                icon.repaint();
            }
            
            @Override
            public void actOnMouseExit(MouseEvent e){
                SVGIconPanel icon = (SVGIconPanel) e.getSource();
                icon.overrideFill("arrow", navWhite);
                icon.setbgSquarePadding(prevBGSqrPad);
                icon.setBackgroundPainted(false);
                icon.repaint();
            }
            
            @Override
            public void actOnMousePress(MouseEvent e){
                SVGIconPanel icon = (SVGIconPanel) e.getSource();
                icon.setbgSquarePadding(4.0);
                icon.setIconSquarePadding(2.0);
                icon.repaint();
            }
            
            @Override
            public void actOnMouseRelease(MouseEvent e){
                SVGIconPanel icon = (SVGIconPanel) e.getSource();
                icon.setbgSquarePadding(0.0);
                icon.setIconSquarePadding(prevIconSqrPad);
                icon.repaint();
                
                if(icon == rightArrow){
                    currentYear++;
                    if(currentYear > 4){
                        currentYear = 1;
                    }
                }else if(icon == leftArrow){
                    currentYear--;
                    if(currentYear < 1){
                        currentYear = 4;
                    }
                }
                setOrdinal(currentYear);
                initializeSelection(currentYear);
            }
        };
        
        rightArrow.addMouseListener(navigationGran);
        leftArrow.addMouseListener(navigationGran);
    }
    
    private void setOrdinal(int year){
        
        String ordinalText;
        String yearString = Integer.toString(year);
        if(yearString.endsWith("1")){
            ordinalText = "st";
        }else if(yearString.endsWith("2")){
            ordinalText = "nd";
        }else if(yearString.endsWith("3")){
            ordinalText = "rd";
        }else{
            ordinalText = "th";
        }
        
        ordinalNumberLabel.setText(yearString);
        ordinalIndicatorLabel.setText(ordinalText);
    }
}
